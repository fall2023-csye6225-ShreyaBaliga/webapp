name: AMI_PACKER BUILD

on:
  pull_request:
    types:
      - closed
    branches:
        - main

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    name: AMI_PACKER BUILD
    
    services:
        postgres:
          image: postgres:latest
          env:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            POSTGRES_DB: ${{ secrets.DB_DATABASE }}
            POSTGRES_USER: ${{ secrets.DB_USER }}
            POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
            POSTGRES_PORT: ${{ secrets.DB_PORT }}
            POSTGRES_HOST: ${{ secrets.DB_HOST }}
          ports:
            - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
  
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'

    - name: Install dependencies
      run: npm install

    - name: Create .env file
      run: |
        touch .env
        echo DATABASE_URL: ${{ secrets.DATABASE_URL }} >> .env
        echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env
        echo DB_USER=${{ secrets.DB_USER }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env

    - name: Run Integration tests
      run: npm run test

    - name: Build Artifacts
      run: |
        zip -r webapp.zip .
        mkdir -p webapp
        mv webapp.zip webapp/

    - name: Setup Packer
      uses: hashicorp/setup-packer@main
      id: setup
      with:
        version: "latest"

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Packer Initialization
      id: init
      run: |
        packer init packer/aws-ubuntu.pkr.hcl

    - name: AMI_PACKER BUILD
      run: |
        packer build -var "artifact=webapp/webapp.zip" packer/aws-ubuntu.pkr.hcl